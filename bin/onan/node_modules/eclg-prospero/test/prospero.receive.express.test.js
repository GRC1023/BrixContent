var assert = require('assert');
var express = require('express');
var querystring = require('querystring');
var http = require('http');
var Prospero = require('../lib/prospero');

var sharedConfig = {
  rootUrl: "http://localhost:4778",
  principal: "ONE",
  sharedKey: "1234567890123456",
  prosperoDefaults: {}
};

exports['test receive message express bodyParser'] = function() {
  var host = "localhost",
      port = 19981,
      p = new Prospero(sharedConfig),
      wasCallbackCalled = false;

  // the server that will receive the message from the simulated Prospero
  var server = express.createServer();

  server.configure(function() {
    server.use(express.bodyParser());
    server.use(server.router);
  });

  server.post('/receive', function(req, res) {
    p.receive(req, res, callback);
  });

  server.listen(port, host);

  var finish = function() {
    server.close();
    clearTimeout(timeout);
    assert.ok(wasCallbackCalled);
  }

      
  var timeout = setTimeout(function() {
    finish();
  }, 2000);

  var callback = function(error, data, done) {
    assert.ok(!error);
    assert.isDefined(data);
    assert.equal("Browser.Activity", data["MESSAGE-TYPE"], "MESSAGE-TYPE should equal Browser.Activity as sanity check");

    // test JSON payload parsing
    assert.isDefined(data["JSON-PAYLOAD"]);
    assert.equal("connected", data["JSON-PAYLOAD"].activity.name)

    wasCallbackCalled = true;
    done();
    finish();
  };

  // simulate a POST from Prospero
  var options = {
    host: host,
    port: port,
    path: "/receive",
    method: "POST",
    headers: {
      'content-type': 'application/x-www-form-urlencoded'
    }
  };

  var message = {
    'DELIVERY-ATTEMPT-ID': '7e1298db-3fae-4316-ac54-ae561e79d01a',
    'MESSAGE-TYPE': 'Browser.Activity',
    'MESSAGE-ID': '610e556b-fad9-4a99-b707-8adfb94042c5',
    AUTHORIZATION: 'ONE|2011-04-01T20:21:07Z|6152692d8176532b42333796f4727c8e',
    'AUTHORIZATION-DELIMITER': '|',
    PAYLOAD: '{"activity":{"name":"connected","user_agent":"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.204 Safari/534.16","user_agent_browser":"Chrome 10.0.648","user_agent_os":"OS X 10.6.6","flash_version":"10,2,154","referrer":"https://localhost:3000/test/index.html","browser_channel_transport":"websocket","served_from_host":"https://localhost:3000","page_id":"A146D7E5-320E-408F-9901-2ECFCF024218","ms_since_page_load":"26","datetime":"2011-04-01T20:21:07.710Z"}}',
    'PAYLOAD-CONTENT-TYPE': 'application/json'
  };

  var postBody = querystring.stringify(message);

  var req = http.request(options, function(res) {});
  req.write(postBody);
  req.end();
};